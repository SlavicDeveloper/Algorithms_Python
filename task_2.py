"""Код, направленный на поиск лучшего способа хранения строковых данных"""
from memory_profiler import profile


# Вариант с использованием f-строк (появляется инкремент 0.1 MiB (19.5 MiB))
# Данный инкремент меньче, чем инкремент из task2_6_1, так как мы используем
# f-строки, которые экономят память
@profile
def f_string_obj(el1, el2):
    """Используем f-строки"""
    obj = f"{el1}+{el2}+{el1}+{el2}"
    return obj


f_string_obj("rrr" * 10000, "ttt" * 10000)

"""Код, направленный на поиск лучшего способа хранения строковых данных"""
from memory_profiler import profile


# Вариант с использованием обычных строк (появляется инкремент 0.3 MiB (19.6 MiB))
@profile
def ordinary_str(el3, el4):
    """Используем обычные строки"""
    obj2 = (el3 + "+" + el4 + "+" + el3 + "+" + el4)
    return obj2


ordinary_str("rrr" * 10000, "ttt" * 10000)
